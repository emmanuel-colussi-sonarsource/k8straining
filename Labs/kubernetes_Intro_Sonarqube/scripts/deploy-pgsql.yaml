apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_PASSWORD: admin123
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgsql-initdb-config
data:
  initdb.sh: |
      #!/bin/bash
      set -e
      psql -v ON_ERROR_STOP=1 --username 'postgres' --dbname 'postgres' <<-EOSQL
      CREATE ROLE sonarqube WITH LOGIN PASSWORD 'sonarqube';
      CREATE DATABASE sonarqube9 WITH ENCODING 'UTF8' OWNER sonarqube TEMPLATE=template0;
      GRANT ALL PRIVILEGES ON DATABASE sonarqube9 TO sonarqube;
      EOSQL
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres 
  template:
    metadata:
      labels:
        app: postgres 
    spec:
      containers:
        - name: postgres
          image: postgres:13.9
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: initscript 
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: data01-pgsql
      volumes:
        - name: initscript
          configMap: 
            name: pgsql-initdb-config     
---
apiVersion: v1
kind: Service
metadata:
  name: pgsql-svc1 
  labels:
    app: postgres
spec:
  type: LoadBalancer 
  ports:
   - port: 5432
  selector:
   app: postgres
